Lab 3: Sensor Transmission to Android App via MIT App Inventor
Group Number: 149
Group Members: Derrick Alders, Daniel Longo, Michael Wholey
Due: 4/16/2019
Intro
The goal of this project is to design a small sensor station and transmit the collected sensor data via WiFi to an Android device. We chose to use a combination sensor for the humidity and temperature of the area in which the hardware is stored. 

Objectives
The aims of the project
are as follows:
Create Arduino/Raspberry Pi-based project which will be developed in MIT App Inventor. 
The app should have the ability to turn on the data transmission.
Connect any type of sensor with it and dynamically visualize the data in Android.
The app should show the data dynamically in form of graph for the slot of 2 hours. When turn off from app is invoked the data transmission should stop and notification will be received as “Sensor Data stopped”.
Finally, the Arduino should be connected via Wifi sensor rather than over the Bluetooth that was exercised in class.
Use appropriate use of LED’s, buzzer’s and alerting system as previously exercised.

Approaches
We began by splitting the effort for the project into manageable parts. Daniel and Michael handled the hardware and back end programming with the Pi. Derrick took care of designing and programming the app using MIT’s App Inventor software. 
Workflow Diagram/Code

Workflow Diagram/Code

See uploads.
Youtube Video:
GitHub Wiki: https://github.com/dalders0525/490IoTRoPro/wiki/Lab3

Parameters
Raspberry Pi 3
Humidity/Temperature Sensor
Pi/Arduino WiFi Module
MIT App Inventor Software
Android Operating System/Phone
Extensions: ChartMaker and TaifunNotification

Evaluation and Conclusion
The project came to completion with little time left before the submission. However, the program and the app run as expected and the data is transmitted effectively. We were able to turn the project on and off with the push of a button. While the project was “on”, we would be able to receive data from the pi over the WiFi on a local ip address. When pressed off, the transmission stops.
As requested, there’s a bar graph that updates every second and stores the values in a TinyDB for future reference. The temperature is displayed on the front screen, and all of it is laid out in an orderly manner.
